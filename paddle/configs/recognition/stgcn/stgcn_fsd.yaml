MODEL: #MODEL field
    framework: "RecognizerGCN" #Mandatory, indicate the type of network, associate to the 'paddlevideo/modeling/framework/' .
    backbone: #Mandatory, indicate the type of backbone, associate to the 'paddlevideo/modeling/backbones/' .
        name: "STGCN" #Mandatory, The name of backbone.
    head:
        name: "STGCNHead" #Mandatory, indicate the type of head, associate to the 'paddlevideo/modeling/heads'
        num_classes: 5 #Optional, the number of classes to be classified.

DATASET: #DATASET field
    batch_size: 64 #Mandatory, bacth size
    num_workers: 4 #Mandatory, the number of subprocess on each GPU.
    test_batch_size: 1
    test_num_workers: 0
    train:
        format: "SkeletonDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        file_path: "/home/haoge/ymq1/nosize_kinetics-skeleton/train_data.npy" #Mandatory, train data index file path
        label_path: "/home/haoge/ymq1/nosize_kinetics-skeleton/train_label.pkl"
    valid:
        format: "SkeletonDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        file_path: "/home/haoge/ymq1/nosize_kinetics-skeleton/val_data.npy" #Mandatory, train data index file path
        label_path: "/home/haoge/ymq1/nosize_kinetics-skeleton/val_label.pkl"
    test:
        format: "SkeletonDataset" #Mandatory, indicate the type of dataset, associate to the 'paddlevidel/loader/dateset'
        file_path: "/home/haoge/ymq1/nosize_kinetics-skeleton/test_data.npy" #Mandatory, valid data index file path
        label_path: "/home/haoge/ymq1/nosize_kinetics-skeleton/test_label.pkl"
        test_mode: True

PIPELINE: #PIPELINE field
    train: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
        sample:
            name: "AutoPadding"
            window_size: 300
        transform: #Mandotary, image transfrom operator
            - SkeletonNorm:
    valid: #Mandotary, indicate the pipeline to deal with the training data, associate to the 'paddlevideo/loader/pipelines/'
        sample:
            name: "AutoPadding"
            window_size: 300
        transform: #Mandotary, image transfrom operator
            - SkeletonNorm:
    test: #Mandatory, indicate the pipeline to deal with the validing data. associate to the 'paddlevideo/loader/pipelines/'
        sample:
            name: "AutoPadding"
            window_size: 300
        transform: #Mandotary, image transfrom operator
            - SkeletonNorm:

OPTIMIZER: #OPTIMIZER field
  name: 'Momentum'
  momentum: 0.9
  learning_rate:
    name: 'CosineAnnealingDecay'
    learning_rate: 0.05
    T_max: 90
  weight_decay:
    name: 'L2'
    value: 1e-4


METRIC:
    name: 'SkeletonMetric'
    out_file: 'single_submission_ymq_sthcn_0521.csv'


INFERENCE:
    name: 'STGCN_Inference_helper'
    num_channels: 3
    window_size: 300
    vertex_nums: 17
    person_nums: 2


model_name: "nosize1_STGCN_new_test"
log_interval: 10 #Optional, the interal of logger, default:10
epochs: 1000 #Mandatory, total epoch
val_interval: 10
validate: True